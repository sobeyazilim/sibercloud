#!/bin/bash
# shell account command

# CONFIG FILES
DEFAULT_NODEMANAGER_CONFIG="/sobe/asger/config/nodemanager/manager.conf"
DEFAULT_NODEMANAGER_EXT_CONFIG="/sobe/asger/config/nodemanager/50-extensions"
DEFAULT_CERT_TOMCAT="/sobe/certs/tomcat"
DEFAULT_ETH0_CONFIG="/etc/sysconfig/network-scripts/ifcfg-eth0"
DEFAULT_RESOLV_CONFIG="/etc/resolv.conf"
DEFAULT_DNSMASQ_CONFIG="/etc/dnsmasq.conf"
DEFAULT_NTPD_CONFIG="/etc/ntp.conf"
DEFAULT_LDAP_CERT_DIR="/sobe/certs/ldap"
DEFAULT_ENVIRONMENT_CONFIG="/sobe/asger/shell/environment"
DEFAULT_POSTGRES_CLIENT_CERT_DIR="/sobe/certs/postgres/client"
VPASS="honkltTedMYtxwO6"

# check serial number file
if [ ! -f "/sobe/asger/.serial" ];then

  dmidecode -s system-uuid > /sobe/asger/.serial
  chmod 444 /sobe/asger/.serial
  chattr +i  /sobe/asger/.serial

fi

# load environment variables
source /sobe/asger/shell/environment

# exit in case of error
set -E

show_role(){

    if [ "${SYSTEM_INSTALL_NODE}" == "nodemanager" ];then

      echo "System Permissions:"

      PGSSLMODE=verify-ca PGSSLROOTCERT=${DEFAULT_POSTGRES_CLIENT_CERT_DIR}/ca.pem PGSSLCERT=${DEFAULT_POSTGRES_CLIENT_CERT_DIR}/postgresql.pem PGSSLKEY=${DEFAULT_POSTGRES_CLIENT_CERT_DIR}/postgresql-600.key PGPASSWORD=$VPASS psql --dbname=nodevault --username=root --port=$SYSTEM_NODE_VAULT_PORT -h $SYSTEM_NODE_VAULT --command="select guacamole_entity.name as account_name,guacamole_system_permission.permission from guacamole_system_permission INNER JOIN guacamole_entity ON guacamole_entity.entity_id=guacamole_system_permission.entity_id where guacamole_entity.type='USER';"|sed 's/CONNECTION/APPLICATION/g'|sed 's/USER/ACCOUNT/g'|sed 's/ADMINISTER/SUPERADMIN/g'|sed 's/CREATE_SHARING_PROFILE/APPCONNECT/g'
      
      PGSSLMODE=verify-ca PGSSLROOTCERT=${DEFAULT_POSTGRES_CLIENT_CERT_DIR}/ca.pem PGSSLCERT=${DEFAULT_POSTGRES_CLIENT_CERT_DIR}/postgresql.pem PGSSLKEY=${DEFAULT_POSTGRES_CLIENT_CERT_DIR}/postgresql-600.key PGPASSWORD=$VPASS psql --dbname=nodevault --username=root --port=$SYSTEM_NODE_VAULT_PORT -h $SYSTEM_NODE_VAULT --command="select guacamole_entity.name as account_group_name,guacamole_system_permission.permission from guacamole_system_permission INNER JOIN guacamole_entity ON guacamole_entity.entity_id=guacamole_system_permission.entity_id where guacamole_entity.type='USER_GROUP';"|sed 's/CONNECTION/APPLICATION/g'|sed 's/USER/ACCOUNT/g'|sed 's/ADMINISTER/SUPERADMIN/g'|sed 's/CREATE_SHARING_PROFILE/APPCONNECT/g'

    else

        echo "It is not manager node"
    fi
    

}

show_lastlogin(){

    if [ "${SYSTEM_INSTALL_NODE}" == "nodemanager" ];then

        PGSSLMODE=verify-ca PGSSLROOTCERT=${DEFAULT_POSTGRES_CLIENT_CERT_DIR}/ca.pem PGSSLCERT=${DEFAULT_POSTGRES_CLIENT_CERT_DIR}/postgresql.pem PGSSLKEY=${DEFAULT_POSTGRES_CLIENT_CERT_DIR}/postgresql-600.key PGPASSWORD=$VPASS psql --dbname=nodevault --username=root --port=$SYSTEM_NODE_VAULT_PORT -h $SYSTEM_NODE_VAULT --command="select  username as account_name, max(start_date) at time zone '$SYSTEM_TIMEZONE' as last_login from guacamole_user_history group by username order by username;"

    else

        echo "It is not manager node"
    fi
    

}

show_membership(){


        rm -rf /tmp/account_groups
        touch /tmp/account_groups

        PGSSLMODE=verify-ca PGSSLROOTCERT=${DEFAULT_POSTGRES_CLIENT_CERT_DIR}/ca.pem PGSSLCERT=${DEFAULT_POSTGRES_CLIENT_CERT_DIR}/postgresql.pem PGSSLKEY=${DEFAULT_POSTGRES_CLIENT_CERT_DIR}/postgresql-600.key PGPASSWORD=$VPASS psql --dbname=nodevault --username=root --port=$SYSTEM_NODE_VAULT_PORT -h $SYSTEM_NODE_VAULT --tuples-only --command="select name from guacamole_entity where type='USER_GROUP';"|xargs -I {} echo {} >>/tmp/account_groups


        while read line;
        do

            echo -e "\n|||Account Group name: $line"
            echo "Members:"

            entity_id=$(PGSSLMODE=verify-ca PGSSLROOTCERT=${DEFAULT_POSTGRES_CLIENT_CERT_DIR}/ca.pem PGSSLCERT=${DEFAULT_POSTGRES_CLIENT_CERT_DIR}/postgresql.pem PGSSLKEY=${DEFAULT_POSTGRES_CLIENT_CERT_DIR}/postgresql-600.key PGPASSWORD=$VPASS psql --dbname=nodevault --username=root --port=$SYSTEM_NODE_VAULT_PORT -h $SYSTEM_NODE_VAULT --tuples-only --command="select entity_id from guacamole_entity where type='USER_GROUP' and name='$line';")

            user_group_id=$(PGSSLMODE=verify-ca PGSSLROOTCERT=${DEFAULT_POSTGRES_CLIENT_CERT_DIR}/ca.pem PGSSLCERT=${DEFAULT_POSTGRES_CLIENT_CERT_DIR}/postgresql.pem PGSSLKEY=${DEFAULT_POSTGRES_CLIENT_CERT_DIR}/postgresql-600.key PGPASSWORD=$VPASS psql --dbname=nodevault --username=root --port=$SYSTEM_NODE_VAULT_PORT -h $SYSTEM_NODE_VAULT --tuples-only --command="select user_group_id from guacamole_user_group where entity_id=$entity_id;")

            PGSSLMODE=verify-ca PGSSLROOTCERT=${DEFAULT_POSTGRES_CLIENT_CERT_DIR}/ca.pem PGSSLCERT=${DEFAULT_POSTGRES_CLIENT_CERT_DIR}/postgresql.pem PGSSLKEY=${DEFAULT_POSTGRES_CLIENT_CERT_DIR}/postgresql-600.key PGPASSWORD=$VPASS psql --dbname=nodevault --username=root --port=$SYSTEM_NODE_VAULT_PORT -h $SYSTEM_NODE_VAULT --tuples-only --command="select guacamole_entity.name as account_name, guacamole_entity.type  from guacamole_user_group_member inner join guacamole_entity on guacamole_entity.entity_id=guacamole_user_group_member.member_entity_id where guacamole_user_group_member.user_group_id=$user_group_id;"

          
        done < /tmp/account_groups

}


show_superadmin(){


      PGSSLMODE=verify-ca PGSSLROOTCERT=${DEFAULT_POSTGRES_CLIENT_CERT_DIR}/ca.pem PGSSLCERT=${DEFAULT_POSTGRES_CLIENT_CERT_DIR}/postgresql.pem PGSSLKEY=${DEFAULT_POSTGRES_CLIENT_CERT_DIR}/postgresql-600.key PGPASSWORD=$VPASS psql --dbname=nodevault --username=root --port=$SYSTEM_NODE_VAULT_PORT -h $SYSTEM_NODE_VAULT --command="select name,type from guacamole_system_permission inner join guacamole_entity on guacamole_entity.entity_id = guacamole_system_permission.entity_id where guacamole_system_permission.permission='ADMINISTER';"|sed 's/CONNECTION/APPLICATION/g'|sed 's/USER/ACCOUNT/g'|sed 's/ADMINISTER/SUPERADMIN/g'|sed 's/CREATE_SHARING_PROFILE/APPCONNECT/g'

}

show_disabled(){


      PGSSLMODE=verify-ca PGSSLROOTCERT=${DEFAULT_POSTGRES_CLIENT_CERT_DIR}/ca.pem PGSSLCERT=${DEFAULT_POSTGRES_CLIENT_CERT_DIR}/postgresql.pem PGSSLKEY=${DEFAULT_POSTGRES_CLIENT_CERT_DIR}/postgresql-600.key PGPASSWORD=$VPASS psql --dbname=nodevault --username=root --port=$SYSTEM_NODE_VAULT_PORT -h $SYSTEM_NODE_VAULT --command="select name as account_name,full_name,email_address,organization from guacamole_user inner join guacamole_entity on guacamole_entity.entity_id=guacamole_user.entity_id where disabled=True;"

      PGSSLMODE=verify-ca PGSSLROOTCERT=${DEFAULT_POSTGRES_CLIENT_CERT_DIR}/ca.pem PGSSLCERT=${DEFAULT_POSTGRES_CLIENT_CERT_DIR}/postgresql.pem PGSSLKEY=${DEFAULT_POSTGRES_CLIENT_CERT_DIR}/postgresql-600.key PGPASSWORD=$VPASS psql --dbname=nodevault --username=root --port=$SYSTEM_NODE_VAULT_PORT -h $SYSTEM_NODE_VAULT --command="select name as account_group_name from guacamole_user_group inner join guacamole_entity on guacamole_entity.entity_id=guacamole_user_group.entity_id where disabled=True;"

}


show_help(){

echo "
Usage: account [OPTIONS] COMMAND [ARGS]...
  Manage accounts.
Options:
  -h, --help, help     Show this message and exit.
Commands:
  disabled             Display disabled accounts
  lastlogin            Display account's last login datetime
  membership           Display group's members
  role                 Display accounts' roles
  superadmin           Display superadmin accounts

Usage:
account < disabled | lastlogin | membership | role | superadmin >

"
}


case $1 in

    disabled) show_disabled;;
    superadmin) show_superadmin;;
    role) show_role;;
    lastlogin) show_lastlogin;;
    membership) show_membership;;
    --help) show_help;;
    -h) show_help;;
    *) show_help;;

esac
